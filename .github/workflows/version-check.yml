name: version-check

on:
  workflow_call:
    outputs:
      success:
        description: "Indicates if new release version is available"
        value: ${{ jobs.check.outputs.success }}

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.set_success.outputs.success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"

      - name: Cache root node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install root dependencies
        run: npm install

      - name: Determine next and previous version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -e
          output=$(npx semantic-release --dry-run || echo "")

          echo "$output"

          # Extract next version safely
          next_version=$(echo "$output" | grep -oP '(?<=next release version is )[^ ]+' || echo "")

          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Check next version
        id: set_success
        run: |
          if [[ -z "${{ env.NEXT_VERSION }}" ]]; then
            echo "❌ No new version detected."
            echo "success=false" >> $GITHUB_ENV
            echo "success=false" >> $GITHUB_OUTPUT
          else
            echo "✅ New version detected: ${{ env.NEXT_VERSION }}"
            echo "success=true" >> $GITHUB_ENV
            echo "success=true" >> $GITHUB_OUTPUT
          fi
