name: build-docs

on:
  workflow_call:

permissions:
  contents: read

jobs:
  build_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Docusaurus repo
        uses: actions/checkout@v4
        with:
          repository: drusco/docusaurus
          ref: nexos
          path: docusaurus-tmp

      - name: Move Docusaurus contents into main repo folder
        run: |
          rm -rf docusaurus
          mkdir docusaurus
          shopt -s dotglob
          mv docusaurus-tmp/* docusaurus/
          rm -rf docusaurus-tmp

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"

      - name: Cache npm global store
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json', 'docusaurus/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install root dependencies
        run: npm ci

      - name: Install Docusaurus dependencies
        run: npm ci
        working-directory: docusaurus

      - name: Get the Git tag
        run: |
          git status

          TAG_NAME=$(git describe --tags --abbrev=0 || echo "No tags found")
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag

          if [[ "$TAG_NAME" == "No tags found" ]]; then
            IS_PRERELEASE="true"
          elif [[ "$TAG_NAME" == *"-next"* ]]; then
            IS_PRERELEASE="true"
          else
            IS_PRERELEASE="false"
          fi
          echo "IS_PRERELEASE=$IS_PRERELEASE" >> $GITHUB_ENV

      - name: Build and package docs
        working-directory: docusaurus
        run: |
          if [ "$IS_PRERELEASE" == "true" ]; then
            echo "Pre-release detected. Using 'next' as the version name."
            npx docusaurus docs:version next
          else
            echo "Stable release detected. Using $TAG_NAME as the version name."
            npx docusaurus docs:version "${TAG_NAME#v}"
          fi

          if [ -d "versioned_docs" ] && [ -d "versioned_sidebars" ]; then
            tar -czf docs.tar.gz versioned_docs versioned_sidebars
          else
            echo "Error: versioned_docs or versioned_sidebars directories do not exist!"
            exit 1
          fi

      - name: Upload docs as release asset
        uses: softprops/action-gh-release@v2
        with:
          files: docusaurus/docs.tar.gz
          tag_name: ${{ env.TAG_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
